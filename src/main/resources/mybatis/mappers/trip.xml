<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.trip">

	   <resultMap id="map" type="dormVO">
      <result property="dorm_no" column="dorm_no"></result>
      <result property="dorm_name" column="dorm_name"></result>
      <result property="dorm_addr" column="dorm_addr"></result>
      <result property="dorm_picture" column="dorm_picture"></result>
      <result property="opt_wifi" column="opt_wifi"></result>
      <result property="opt_parking" column="opt_parking"></result>
      <result property="opt_aircon" column="opt_aircon"></result>
      <result property="opt_dryer" column="opt_dryer"></result>
      <result property="opt_port" column="opt_port"></result>
      <result property="min_pay_night" column="min_pay_night"></result>
      <result property="count_reserve_no" column="count_reserve_no"></result>
      <result property="cnt_rno" column="cnt_rno"></result>
   </resultMap>
   
   <select id="selectDormList" resultType="dormVO" parameterType="java.util.HashMap">
      <![CDATA[
      SELECT d.dorm_no, d.dorm_name, d.dorm_addr, d.dorm_picture, d.dorm_category_no,
         d.opt_wifi, d.opt_parking, d.opt_aircon, d.opt_dryer, d.opt_port, 
         Min(h1.room_pay_night) as min_pay_night, count(vo.reserve_no) as count_reserve_no
      FROM tb_dorm d, tb_room m left join(
             select dorm_no, room_no, room_pay_night from tb_room
             minus
             select room.dorm_no, room.room_no, room.room_pay_night
             from tb_room room, tb_reservation reser
             where (
                     '2022/05/27' <= reser.reserve_checkin and  reser.reserve_checkin < '2022/05/28'
                     OR '2022/05/27' < reser.reserve_checkout and  reser.reserve_checkout <= '2022/05/28'
                     OR '2022/05/27' > reser.reserve_checkin and  reser.reserve_checkout > '2022/05/28')
                AND reser.room_no = room.room_no ) h1 on m.room_no = h1.room_no
          left join (
              select reserv.reserve_no, reserv.room_no from tb_review revi, tb_reservation reserv
              where revi.reserve_no = reserv.reserve_no
          ) vo on m.room_no = vo.room_no
      ]]>
       <where>
          d.dorm_no = m.dorm_no
          and m.room_person <![CDATA[>=]]> #{room_person}
          and dorm_name like '%'||#{search}||'%'
          <if test="dorm_category_no != 0">
             and d.dorm_category_no = #{dorm_category_no}
          </if>
          <if test="opt_wifi == 1">
             and d.opt_wifi <![CDATA[>=]]> #{opt_wifi}
          </if>
          <if test="opt_parking == 1">
             and d.opt_parking <![CDATA[>=]]> #{opt_parking}
          </if>
          <if test="opt_aircon == 1">
             and d.opt_aircon <![CDATA[>=]]> #{opt_aircon}
          </if>
          <if test="opt_dryer == 1">
             and d.opt_dryer <![CDATA[>=]]> #{opt_dryer}
          </if>
          <if test="opt_port == 1">
             and d.opt_port <![CDATA[>=]]> #{opt_port}
          </if>
          <if test="price == 1">
             and room_pay_night <![CDATA[<=]]> 50000
          </if>
          <if test="price == 2">
             and (room_pay_night <![CDATA[<=]]> 100000 and room_pay_night <![CDATA[>]]> 50000)
          </if>
          <if test="price == 3">
             and (room_pay_night <![CDATA[<=]]> 200000 and room_pay_night <![CDATA[>]]> 100000)
          </if>
          <if test="price == 4">
             and room_pay_night <![CDATA[>]]> 200000
          </if>
       </where>
       GROUP BY d.dorm_no, d.dorm_name, d.dorm_addr, d.dorm_picture, d.dorm_category_no, 
          d.opt_wifi, d.opt_parking, d.opt_aircon, d.opt_dryer, d.opt_port
       <if test="order == 1">
          ORDER BY min_pay_night
       </if>
       <if test="order == 2">
          ORDER BY min_pay_night desc
       </if>
   </select>


	<select id="selectDorm" parameterType="int" resultType="dormDTO">
		select * from tb_dorm
		where dorm_no = #{dormNo}
	</select>
	<select id="selectDorm2" parameterType="java.util.HashMap" resultType="dormDTO">
		SELECT * FROM tb_dorm
		WHERE dorm_contents = #{contents}
		AND dorm_addr = #{addr}
	</select>
	
	<update id="changeLike" parameterType="java.util.HashMap">
		UPDATE tb_dorm SET
		like_cnt = #{totalCount}
		WHERE dorm_no = #{dormNo}
	</update>
	<select id="checkLike" resultType="int" parameterType="java.util.HashMap">
		SELECT COUNT(*) as count
		FROM tb_like
		WHERE dorm_no = #{dormNo}
		AND member_id = #{id}
	</select>
	<insert id="insertLike" parameterType="java.util.HashMap">
		INSERT INTO tb_like
		VALUES (
			tb_like_seq.nextval,
			TO_DATE(SYSDATE, 'YY/MM/DD'),
			#{id},
			#{dormNo}
		)
	</insert>
	<delete id="deleteLike" parameterType="java.util.HashMap">
		DELETE FROM tb_like
		WHERE member_id=#{id}
		AND dorm_no=#{dormNo}
	</delete>
	<select id="selectRoomsList" resultType="roomDTO" parameterType="int">
		SELECT *
		FROM tb_room
		WHERE dorm_no = #{dormNo}
	</select>
	<select id="reservedRoomsList" resultType="roomDTO" parameterType="java.util.HashMap">
		SELECT room.dorm_no, room.room_no
		FROM tb_room room, tb_reservation reser
		WHERE
			(
			<![CDATA[
				#{checkIn} <= reser.reserve_checkin AND reser.reserve_checkin < #{checkOut}
				OR #{checkIn} < reser.reserve_checkout AND  reser.reserve_checkout <= #{checkOut}
				OR #{checkIn} > reser.reserve_checkin AND  reser.reserve_checkout > #{checkOut}
			]]>
			)
			AND reser.room_no = room.room_no
			AND room.dorm_no = #{dormNo}
	</select>
	<select id="selectReviewsList" resultType="reviewDTO" parameterType="int">
		SELECT review_no, review_title, review_contents, review_score, review_date,
		review_picture,rev.reserve_no, rev.member_id, mem.member_names
		FROM tb_review rev , tb_reservation res, tb_member mem
		WHERE
			rev.reserve_no = res.reserve_no
		AND
			res.member_id = mem.member_id
		AND	
			dorm_no = #{dormNo}
		ORDER BY review_no desc
	</select>
	<insert id="insertReview" parameterType="java.util.HashMap">
		INSERT INTO tb_review
		VALUES (
			tb_review_seq.nextval,
			#{title},
			#{contents},
			#{reviewScore},
			TO_DATE(#{date}, 'YY/MM/DD'),
			#{picture},
			#{reserveNo},
			#{memberId}
		)
	</insert>
	<select id="selectReservation" resultType="reservationDTO" parameterType="int">
		SELECT *
		FROM tb_reservation
		WHERE reserve_no = #{reserveno}
	</select>

	<!-- 좋아요 많은 순서대로 숙소 불러오기  -->
	<select id = "selectMain_dormList" resultType="DormDTO" >
		SELECT *
		FROM TB_DORM
		ORDER BY LIKE_CNT DESC 
	</select>

	<select id="reserReviewChecking" parameterType="int" resultType="int">
		SELECT COUNT(*) FROM tb_review
		WHERE reserve_no = #{reserno}
	</select>

</mapper>